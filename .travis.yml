# http://docs.travis-ci.com/
# https://docs.fastlane.tools/getting-started/ios/fastlane-swift/

language: objective-c
os: osx
osx_image: xcode10
podfile: $HOME/Podfile
xcode_workspace: in-ios.xcworkspace
xcode_scheme: in-ios_test
xcode_destination: platform=iOS Simulator,OS=12.0,name=iPad Pro (9.7-inch)
xcode_sdk: iphonesimulator12.0

env:
  global:
      - LC_CTYPE=en_US.UTF-8
      - LANG=en_US.UTF-8

#addons:
#  apt:
#    sources:
#      - sourceline: 'ppa:ondrej/php'
#    packages:
#      - mediainfo

#services:
#  - mysql
#  - redis-server

cache:
  timeout: 300
  bundler: true
  cocoapods: true
  directories:
    - $HOME/Library/Caches/CocoaPods/Pods/
    - $HOME/.cocoapods/
    - $HOME/.rvm/

before_install:
  - set -e
  - set -o pipefail
  - echo "Starting before_install."
  - . in-scripts/travis-functions.sh
  - before_install short
#  - brew update
  - brew install git-lfs
  - git lfs install
  - git lfs pull
#  - gem update

install:
  - echo "Starting install."
  - bundle install
  - bundle exec pod install --repo-update

before_script:
  - echo "Starting before_script."
  - # check both versions below in all cases
  - |
    if on_store ; then \
      agvtool new-marketing-version ${BUILD_VERSION}
    fi
  - agvtool new-version -all ${TRAVIS_JOB_NUMBER}

  - security create-keychain -p travis ios-build.keychain
  - security default-keychain -s ios-build.keychain
  - security unlock-keychain -p travis ios-build.keychain

  - bundle exec fastlane match appstore --verbose --readonly

  - 'security set-key-partition-list -S apple-tool:,apple: -s -k travis ios-build.keychain'


script:
  - echo "Starting script."
  # check CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO
  #- xcodebuild -workspace in-ios.xcworkspace -scheme in-ios -destination "platform=iOS Simulator,OS=12.0,name=iPad (6th generation)" -sdk iphonesimulator12.0 -showBuildSettings -showdestinations CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO
  - bundle exec fastlane buildLane
  - |
    if echo ${COMMIT_MESSAGE} | grep -iF '#skip-tests' &>/dev/null ; then \
      echo "Skipping unit tests." \
    else \
      xcodebuild -workspace in-ios.xcworkspace -scheme in-ios_test -destination "platform=iOS Simulator,OS=12.0,name=iPad (6th generation)" -sdk iphonesimulator12.0 -showBuildSettings -showdestinations CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO | xcpretty \
    fi

before_cache:
  - echo "Nothing to do for before_cache."

after_success:
  - echo "Starting after_success."
  - mkdir deployment
  - mv "${BUILD_NAME}.zip" "deployment/${BUILD_NAME}.zip"
  - |
    if on_store ; then \
      bundle exec fastlane upload_to_testflight upload -i deployment/${BUILD_NUMBER}-${BUILD_NAME}.ipa --skip_waiting_for_build_processing
    fi

after_failure:
  - echo "Nothing to do for after_failure."

before_deploy:
  - echo "Nothing to do for before_deploy."

deploy:
- provider: s3
  region: "us-east-1"
  access_key_id: "${AWS_ACCESS_KEY}"
  secret_access_key: "${AWS_SECRET_KEY}"
  local_dir: "deployment"
  skip_cleanup: true
  on:
    all_branches: true
    condition: "${DEPLOY_ON_STORE}"
    tags: true
    bucket: "innodem-travis-builds"
    upload_dir: "${TRAVIS_REPO_SLUG}"

after_deploy:
  - echo "Nothing to do for after_deploy."
    
after_script:
  - echo "Nothing to do for after_script."

notifications:
  email:
    on_success: change
    on_failure: change
